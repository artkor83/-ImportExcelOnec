
&НаКлиенте
Процедура НачатьПоиск(Команда)
	
	СтандартнаяОбработка = Ложь;
	ПараметрыФормы = Новый Структура("Заголовок, РежимПоискаТипов, ЗакрыватьПриВыборе", "", Истина, Ложь);
	ОткрытьФорму(Параметры.ПолноеИмяОбработки + ".Форма.ВыборТипа", ПараметрыФормы, ЭтаФорма,,,,,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаСервере
Процедура НачатьПоискНаСервере(ДанныеПоиска, ТипМетаданныхПоиск)
	
	ТаблицаТипов.Очистить();
	
	// Поиск по объектам ссылочного типа.
	Для Каждого ТипПоиска Из ТипМетаданныхПоиск.Типы() Цикл
		
		Масс = Новый Массив; Масс.Добавить(ТипПоиска);
		ТекОписание = Новый ОписаниеТипов(Масс);
		
		ТекСсылка = ТекОписание.ПривестиЗначение();
		Если СтрНачинаетсяС(ТекСсылка, "РегистрНакопленияКлючЗаписи") Тогда
			ИмяРегистра = Сред(ТекСсылка, Найти(ТекСсылка,".")+1);
			ЭлементМД = Метаданные.РегистрыНакопления[ИмяРегистра];
		Иначе
			ЭлементМД = ТекСсылка.Метаданные();
		КонецЕсли;
		
		Если Не ОбщегоНазначения.ЭтоОбъектСсылочногоТипа(ЭлементМД) Тогда
			Продолжить;
		КонецЕсли;
		
		ИмяОбъектаМетаданных = ЭлементМД.ПолноеИмя();
		Позиция = СтрНайти(ИмяОбъектаМетаданных, ".");
		ТипМД = Лев(ИмяОбъектаМетаданных, Позиция - 1);
		
		Для Каждого СтрокаДанных Из ДанныеПоиска Цикл
			ОбработкаТипаРеквизита(СтрокаДанных, ЭлементМД, ТипМД);
		КонецЦикла;
		
		Для Каждого СтрокаДанных Из ДанныеПоиска Цикл
			Для Каждого ЭлементМД1 Из ЭлементМД.Реквизиты Цикл
				ОбработкаТипаРеквизита(СтрокаДанных, ЭлементМД1, ТипМД);
			КонецЦикла;
		КонецЦикла;
		Для Каждого СтрокаДанных Из ДанныеПоиска Цикл
			Для Каждого ЭлементМД0 Из ЭлементМД.ТабличныеЧасти Цикл
				Для Каждого ЭлементМД1 Из ЭлементМД0.Реквизиты Цикл
					ОбработкаТипаРеквизита(СтрокаДанных, ЭлементМД1, ТипМД);
				КонецЦикла;
			КонецЦикла;
		КонецЦикла;
		
	КонецЦикла;

	// Поиск по реквизитам регистров.
	Для Каждого ТипПоиска Из ТипМетаданныхПоиск.Типы() Цикл
		
		Масс = Новый Массив; Масс.Добавить(ТипПоиска);
		ТекОписание = Новый ОписаниеТипов(Масс);
		
		ТекСсылка = ТекОписание.ПривестиЗначение();
		Если СтрНачинаетсяС(ТекСсылка, "РегистрНакопленияКлючЗаписи") Тогда
			ИмяРегистра = Сред(ТекСсылка, Найти(ТекСсылка,".")+1);
			ЭлементМД = Метаданные.РегистрыНакопления[ИмяРегистра];
		Иначе
			ЭлементМД = ТекСсылка.Метаданные();
		КонецЕсли;
		
		Если Не ОбщегоНазначения.ЭтоРегистр(ЭлементМД) Тогда
			Продолжить;
		КонецЕсли;
		
		ИмяОбъектаМетаданных = ЭлементМД.ПолноеИмя();
		Позиция = СтрНайти(ИмяОбъектаМетаданных, ".");
		ТипМД = Лев(ИмяОбъектаМетаданных, Позиция - 1);
			
		Для Каждого СтрокаДанных Из ДанныеПоиска Цикл
			ОбработкаТипаРеквизита(СтрокаДанных, ЭлементМД, ТипМД);
		КонецЦикла;
		
		Для Каждого СтрокаДанных Из ДанныеПоиска Цикл
			Для Каждого ЭлементМД1 Из ЭлементМД.Измерения Цикл
				ОбработкаТипаРеквизита(СтрокаДанных, ЭлементМД1, ТипМД);
			КонецЦикла;
			Для Каждого ЭлементМД1 Из ЭлементМД.Ресурсы Цикл
				ОбработкаТипаРеквизита(СтрокаДанных, ЭлементМД1, ТипМД);
			КонецЦикла;
			Для Каждого ЭлементМД1 Из ЭлементМД.Реквизиты Цикл
				ОбработкаТипаРеквизита(СтрокаДанных, ЭлементМД1, ТипМД);
			КонецЦикла;
		КонецЦикла;
	
	КонецЦикла;
	
	ТаблицаТипов.Сортировать("Имя");
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаТипаРеквизита(СтрокаДанных, ЭлементМД, ТипМД)

	Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(ЭлементМД, "Тип") Тогда
		ТекТип = ЭлементМД.Тип;
	ИначеЕсли СтрНачинаетсяС(ТипМД, "Регистр") Тогда
		Возврат
	Иначе
		Типы = Новый Массив;
		Типы.Добавить(Тип(ТипМД+"Ссылка." + ЭлементМД.Имя));
		ТекТип = Новый ОписаниеТипов(Типы);
	КонецЕсли;
	
	Если ТаблицаТипов.НайтиСтроки(Новый Структура("Имя,ТипЗначения",СтрокаДанных.Имя, ТекТип)).Количество() = 1 Тогда
		Возврат
	КонецЕсли;
	
	РеквизитПоиска = СтрокаДанных[?(ВидПоиска = 0, "Имя", "Представление")];
	Если ВРЕГ(РеквизитПоиска) = ВРег(ЭлементМД.Имя) ИЛИ ВРЕГ(РеквизитПоиска) = ВРег(ЭлементМД.Синоним) Тогда
		НоваяСтрока             = ТаблицаТипов.Добавить();
		НоваяСтрока.Имя         = СтрокаДанных.Имя;
		НоваяСтрока.Представление            = СтрокаДанных.Представление;
		НоваяСтрока.ТипЗначения = ТекТип;
		НоваяСтрока.ТипЗначенияПредставление = СтрСоединить(ОбъектОбработки().ТипПредставление(ТекТип), ",");
		Если ТаблицаТипов.НайтиСтроки(Новый Структура("Имя",СтрокаДанных.Имя)).Количество() > 1 Тогда
			НоваяСтрока.ЭтоВторичнаяЗапись       = Истина;
		КонецЕсли;
		НоваяСтрока.Метаданные  = ЭлементМД.ПолноеИмя();
		НоваяСтрока.Картинка    = БиблиотекаКартинок[ТипМД];
		НоваяСтрока.Пометка     = Истина;
	КонецЕсли;

КонецПроцедуры

&НаСервере
Функция ОбъектОбработки()
	Возврат РеквизитФормыВЗначение("Объект");
КонецФункции

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ОбъектОбработка = ОбъектОбработки();
	Попытка
		ИспользуемоеИмяФайлаВнешнейОбработки = ОбъектОбработка.ИспользуемоеИмяФайла;
		КонтекстОбработки = "ВнешняяОбработка";
	Исключение
		КонтекстОбработки = "Обработка";
	КонецПопытки;
	Параметры.ПолноеИмяОбработки = СтрШаблон("%1.%2", КонтекстОбработки, ОбъектОбработка.Метаданные().Имя);
	
	Для Каждого СтрокаДанных Из Параметры.СписокЗначений Цикл
		Если СтрокаДанных.Пометка Тогда
			СписокКолонок.Добавить(СтрокаДанных.Значение, СтрокаДанных.Представление, СтрокаДанных.Пометка);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ПоискТиповОтбор" Тогда
		
		ДанныеПоиска = Новый Массив;
		Для Каждого СтрокаДанных Из СписокКолонок Цикл
			Значение = Новый Структура("Имя,Представление", СтрокаДанных.Значение, СтрокаДанных.Представление);
			ДанныеПоиска.Добавить(Значение);
		КонецЦикла;
		
		НачатьПоискНаСервере(ДанныеПоиска, Параметр);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Принять(Команда)

	ДанныеТипов = Новый Соответствие;
	
	Для Каждого СтрокаДанных Из ТаблицаТипов Цикл
		
		Если НЕ СтрокаДанных.Пометка Тогда
			Продолжить;
		КонецЕсли;
			
		ОписаниеТипа = ДанныеТипов[СтрокаДанных.Имя];
		
		Если ОписаниеТипа = Неопределено Тогда
			ОписаниеТипаНовый = СтрокаДанных.ТипЗначения;
		Иначе
			
			ОписаниеТипаТекущий = СтрокаДанных.ТипЗначения;
			
			СтрокаМаксДлина = Макс(ОписаниеТипа.КвалификаторыСтроки.Длина,
								  ОписаниеТипаТекущий.КвалификаторыСтроки.Длина);
			ЧислоМаксДлина = Макс(ОписаниеТипа.КвалификаторыЧисла.Разрядность,
								  ОписаниеТипаТекущий.КвалификаторыЧисла.Разрядность);
			ЧислоМаксТочность = Макс(ОписаниеТипа.КвалификаторыЧисла.РазрядностьДробнойЧасти,
									 ОписаниеТипаТекущий.КвалификаторыЧисла.РазрядностьДробнойЧасти);
									 
			ДатаМаксЧасть = ОписаниеТипаТекущий.КвалификаторыДаты.ЧастиДаты;
			ДатаМаксЧасть = ?(ОписаниеТипа.КвалификаторыДаты.ЧастиДаты = ЧастиДаты.ДатаВремя, ЧастиДаты.ДатаВремя, ДатаМаксЧасть);
									 
			ОписаниеТипаНовый = Новый ОписаниеТипов(ОписаниеТипа, ОписаниеТипаТекущий.Типы(),,
				Новый КвалификаторыЧисла(ЧислоМаксДлина, ЧислоМаксТочность), Новый КвалификаторыСтроки(СтрокаМаксДлина),
				Новый КвалификаторыДаты(ДатаМаксЧасть));
			
		КонецЕсли;
		
		ДанныеТипов.Вставить(СтрокаДанных.Имя, ОписаниеТипаНовый);
		
	КонецЦикла;
	
	Оповестить("ПоискТипов", ДанныеТипов, ЭтаФорма);
	
	Закрыть();
		
КонецПроцедуры
